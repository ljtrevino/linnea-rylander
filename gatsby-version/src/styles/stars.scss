@function box-shadow($stars) {
	$bxshadow: ();
	@for $i from 1 to $stars {
		$bxshadow: append($bxshadow, (random(100) + 0vw) (random(140) + 0vw) #fff, comma);
	}
	@return unquote($bxshadow);
}

$bxshadow-large: box-shadow(300);
$bxshadow-medium: box-shadow(500);
$bxshadow-small: box-shadow(800);

.stars.large {
	height: 0.15vw;
	width: 0.15vw;
	background: transparent;
	box-shadow: $bxshadow-large;
	animation: blink-large 7s infinite;
}
.stars.medium {
	height: 0.1vw;
	width: 0.1vw;
	background: transparent;
	box-shadow: $bxshadow-medium;
	animation: blink-medium 5s infinite;
}
.stars.small {
	height: 0.05vw;
	width: 0.05vw;
	background: transparent;
	box-shadow: $bxshadow-small;
	animation: blink-small 3s infinite;
}

@keyframes blink-large {
	0% {
		box-shadow: $bxshadow-large;
	}
	70% {
		$colors: '#fff', 'transparent';
		$stars: $bxshadow-large;
		@for $i from 1 to length($stars) {
			$star: set-nth(nth($stars, $i), 3, unquote(nth($colors, random(length($colors)))));
			$stars: set-nth($stars, $i, $star);
		}
		box-shadow: $stars;
	}
	100% {
		box-shadow: $bxshadow-large;
	}
}
@keyframes blink-medium {
	0% {
		box-shadow: $bxshadow-medium;
	}
	70% {
		$colors: '#fff', 'transparent';
		$stars: $bxshadow-medium;
		@for $i from 1 to length($stars) {
			$star: set-nth(nth($stars, $i), 3, unquote(nth($colors, random(length($colors)))));
			$stars: set-nth($stars, $i, $star);
		}
		box-shadow: $stars;
	}
	100% {
		box-shadow: $bxshadow-medium;
	}
}
@keyframes blink-small {
	0% {
		box-shadow: $bxshadow-small;
	}
	70% {
		$colors: '#fff', 'transparent';
		$stars: $bxshadow-small;
		@for $i from 1 to length($stars) {
			$star: set-nth(nth($stars, $i), 3, unquote(nth($colors, random(length($colors)))));
			$stars: set-nth($stars, $i, $star);
		}
		box-shadow: $stars;
	}
	100% {
		box-shadow: $bxshadow-small;
	}
}
